'use client';

import { Sparkles, Brain, MessageCircle } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/shared/ui/card';
import { Badge } from '@/shared/ui/badge';
import { Button } from '@/shared/ui/button';
import { cn } from '@/shared/utils/utils';
import { Insight } from '../types';

interface AnalysisCardProps {
  insight: Insight;
  onStartChat?: (insight: Insight) => void;
}

const getChatMessages = (insight: Insight) => {
  switch (insight.type) {
    case 'critical':
      return [
        {
          id: '1',
          type: 'assistant',
          content: `üö® Detectei uma situa√ß√£o cr√≠tica que precisa da sua aten√ß√£o imediata!\n\nAnalisei os dados e identifiquei que este problema pode resultar em perdas significativas se n√£o for resolvido nas pr√≥ximas horas.`,
          timestamp: 'Agora'
        },
        {
          id: '2', 
          type: 'assistant',
          content: `üîç **Causa raiz identificada:**\nAumento inesperado de 40% nas vendas dos produtos afetados nos √∫ltimos 7 dias, coincidindo com mudan√ßas sazonais e promo√ß√µes de concorrentes.`,
          timestamp: 'Agora'
        },
        {
          id: '3',
          type: 'assistant', 
          content: `üí° **Minha recomenda√ß√£o:**\nImplementar reposi√ß√£o de emerg√™ncia com prazo m√°ximo de 24h e criar transfer√™ncias entre lojas para minimizar perdas imediatas.\n\n‚è∞ **Urg√™ncia:** A√ß√£o necess√°ria nas pr√≥ximas 2 horas!`,
          timestamp: 'Agora'
        }
      ];
    
    case 'attention':
      return [
        {
          id: '1',
          type: 'assistant',
          content: `‚ö†Ô∏è Identifiquei uma situa√ß√£o que merece sua aten√ß√£o hoje.\n\nEmbora n√£o seja cr√≠tica, pode evoluir para um problema maior se n√£o for endere√ßada.`,
          timestamp: 'H√° 5 min'
        },
        {
          id: '2',
          type: 'assistant',
          content: `üîç **An√°lise da situa√ß√£o:**\nDiferen√ßa de pre√ßos resultante de atualiza√ß√£o manual incompleta. O sistema detectou inconsist√™ncias que podem confundir clientes.`,
          timestamp: 'H√° 5 min'
        },
        {
          id: '3',
          type: 'assistant',
          content: `üéØ **Plano de a√ß√£o:**\nSincronizar pre√ßos automaticamente e implementar alertas preventivos para evitar recorr√™ncia.\n\nüìÖ **Prazo:** Resolver ainda hoje`,
          timestamp: 'H√° 5 min'
        }
      ];
    
    case 'opportunity':
      return [
        {
          id: '1',
          type: 'assistant',
          content: `üöÄ Excelente not√≠cia! Detectei uma oportunidade valiosa para voc√™!\n\nCom base em an√°lise preditiva e tend√™ncias de mercado, agir agora pode gerar receita adicional significativa.`,
          timestamp: 'H√° 2 min'
        },
        {
          id: '2',
          type: 'assistant',
          content: `üìä **Oportunidade baseada em:**\nAlta demanda por produtos similares (40% acima da m√©dia) enquanto produtos relacionados est√£o em falta, criando uma janela ideal para capitaliza√ß√£o.`,
          timestamp: 'H√° 2 min'
        },
        {
          id: '3',
          type: 'assistant',
          content: `üí∞ **Estrat√©gia recomendada:**\nCriar promo√ß√£o direcionada com foco em produtos substitutos e implementar estrat√©gia de comunica√ß√£o "alternativa perfeita".\n\n‚≠ê **Potencial:** Alta convers√£o esperada!`,
          timestamp: 'H√° 2 min'
        }
      ];
    
    case 'achievement':
      return [
        {
          id: '1',
          type: 'assistant',
          content: `üéâ Parab√©ns! Tenho √≥timas not√≠cias para compartilhar!\n\nEste resultado superou as expectativas e merece an√°lise para replica√ß√£o. Voc√™ est√° no caminho certo!`,
          timestamp: 'H√° 10 min'
        },
        {
          id: '2',
          type: 'assistant',
          content: `üèÜ **Fatores de sucesso identificados:**\nCombina√ß√£o de sazonalidade favor√°vel, estrat√©gia de marketing efetiva na categoria Moda Feminina e otimiza√ß√£o de estoque realizada no m√™s anterior.`,
          timestamp: 'H√° 10 min'
        },
        {
          id: '3',
          type: 'assistant',
          content: `üìà **Pr√≥ximos passos:**\nDocumentar estrat√©gias utilizadas e aplicar mesma abordagem para outras categorias com potencial similar.\n\nüéØ **Objetivo:** Replicar este sucesso!`,
          timestamp: 'H√° 10 min'
        }
      ];
    
    default:
      return [
        {
          id: '1',
          type: 'assistant',
          content: `ü§ñ Identifiquei alguns padr√µes interessantes que merecem acompanhamento.\n\nEsta situa√ß√£o est√° dentro do esperado, mas h√° oportunidades de otimiza√ß√£o.`,
          timestamp: 'H√° 15 min'
        },
        {
          id: '2',
          type: 'assistant',
          content: `üìä **Padr√£o identificado:**\nVaria√ß√£o dentro do esperado para esta √©poca do ano, mas com alguns pontos que merecem observa√ß√£o cont√≠nua.`,
          timestamp: 'H√° 15 min'
        },
        {
          id: '3',
          type: 'assistant',
          content: `üëÄ **Recomenda√ß√£o:**\nManter monitoramento e avaliar tend√™ncias ao longo da pr√≥xima semana.\n\nüìÖ **Pr√≥xima an√°lise:** Em 7 dias`,
          timestamp: 'H√° 15 min'
        }
      ];
  }
};

const getUrgencyBadge = (insight: Insight) => {
  switch (insight.type) {
    case 'critical':
      return { variant: 'destructive', label: 'URGENTE' };
    case 'attention':
      return { variant: 'warning', label: 'HOJE' };
    case 'opportunity':
      return { variant: 'success', label: 'OPORTUNIDADE' };
    case 'achievement':
      return { variant: 'success', label: 'SUCESSO' };
    default:
      return { variant: 'secondary', label: 'MODERADO' };
  }
};

export function AnalysisCard({ insight, onStartChat }: AnalysisCardProps) {
  const messages = getChatMessages(insight);
  const urgencyBadge = getUrgencyBadge(insight);

  const handleStartChat = () => {
    if (onStartChat) {
      onStartChat(insight);
    }
  };

  return (
    <Card>
      <CardHeader className="pb-4">
        <CardTitle className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="h-8 w-8 bg-primary rounded-full flex items-center justify-center">
              <Sparkles className="h-4 w-4 text-primary-foreground" />
            </div>
            <div>
              <div className="font-medium text-base">An√°lise da IA</div>
              <div className="text-sm text-muted-foreground">Assistente Inteligente</div>
            </div>
          </div>
          <Badge variant={urgencyBadge.variant as any} className="text-xs">
            {urgencyBadge.label}
          </Badge>
        </CardTitle>
      </CardHeader>
      
      <CardContent>
        {/* Chat Messages */}
        <div className="space-y-4 max-h-[400px] overflow-y-auto">
          {messages.map((message, index) => (
            <div
              key={message.id}
              className="flex justify-start animate-in fade-in slide-in-from-left-2"
              style={{
                animationDelay: `${index * 200}ms`,
                animationDuration: '400ms',
                animationFillMode: 'both'
              }}
            >
              <div className="max-w-[90%] bg-background border rounded-lg px-4 py-3 shadow-sm">
                <div className="whitespace-pre-wrap text-sm leading-relaxed">
                  {message.content}
                </div>
                <div className="text-xs text-muted-foreground mt-2 flex items-center gap-1">
                  <Brain className="h-3 w-3" />
                  {message.timestamp}
                </div>
              </div>
            </div>
          ))}
          
          {/* Insight Original como mensagem do usu√°rio */}
          <div className="flex justify-end">
            <div className="max-w-[90%] bg-muted/60 border rounded-lg px-4 py-3">
              <div className="text-sm leading-relaxed">
                üìä {insight.naturalLanguageText}
              </div>
              <div className="text-xs text-muted-foreground mt-2">
                Insight Original ‚Ä¢ Sistema
              </div>
            </div>
          </div>
        </div>

        {/* Chat Button & Status */}
        <div className="mt-4 pt-3 border-t border-border space-y-3">
          {/* Bot√£o de Conversa */}
          <div className="flex justify-center">
            <Button
              onClick={handleStartChat}
              variant="outline"
              size="sm"
              className="flex items-center gap-2 hover:bg-primary hover:text-primary-foreground transition-colors"
            >
              <MessageCircle className="h-4 w-4" />
              Conversar com a IA sobre este insight
              <Sparkles className="h-3 w-3" />
            </Button>
          </div>

          {/* Status da IA */}
          <div className="flex items-center justify-center gap-2 text-xs text-muted-foreground">
            <div className="h-2 w-2 bg-green-500 rounded-full animate-pulse"></div>
            <span>IA ativa ‚Ä¢ Monitorando situa√ß√£o</span>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}