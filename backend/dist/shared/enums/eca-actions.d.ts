export declare const PURCHASE_ACTIONS: {
    readonly CREATE_ORDER: "create_order";
    readonly APPROVE_ORDER: "approve_order";
    readonly REGISTER_INVOICE: "register_invoice";
    readonly ARRIVE_AT_CD: "arrive_at_cd";
    readonly START_CONFERENCE: "start_conference";
    readonly SCAN_ITEMS: "scan_items";
    readonly EFFECTUATE_CD: "effectuate_cd";
};
export type PurchaseAction = keyof typeof PURCHASE_ACTIONS;
export declare const TRANSFER_ACTIONS: {
    readonly CREATE_TRANSFER_REQUEST: "create_transfer_request";
    readonly REGISTER_REQUEST: "register_request";
    readonly CREATE_SEPARATION_MAP: "create_separation_map";
    readonly START_SEPARATION: "start_separation";
    readonly COMPLETE_SEPARATION: "complete_separation";
    readonly COMPLETE_SEPARATION_OK: "complete_separation_ok";
    readonly COMPLETE_SEPARATION_DIFF: "complete_separation_diff";
    readonly MOVE_TO_DOCK: "move_to_dock";
    readonly SHIP_TRANSFER: "ship_transfer";
    readonly INVOICE_TRANSFER: "invoice_transfer";
    readonly START_STORE_CONFERENCE: "start_store_conference";
    readonly SCAN_STORE_ITEMS: "scan_store_items";
    readonly COMPLETE_STORE_CONFERENCE: "complete_store_conference";
    readonly COMPLETE_STORE_CONFERENCE_OK: "complete_store_conference_ok";
    readonly COMPLETE_STORE_CONFERENCE_DIFF: "complete_store_conference_diff";
    readonly EFFECTUATE_STORE: "effectuate_store";
    readonly REGISTER_RECEIPT: "register_receipt";
    readonly REGISTER_COMPLETION: "register_completion";
};
export type TransferAction = keyof typeof TRANSFER_ACTIONS;
export declare const SALES_ACTIONS: {
    readonly REGISTER_SALE: "register_sale";
    readonly REGISTER_PAYMENT: "register_payment";
    readonly REGISTER_FISCAL_DATA: "register_fiscal_data";
    readonly CANCEL_SALE: "cancel_sale";
};
export type SalesAction = keyof typeof SALES_ACTIONS;
export declare const RETURN_ACTIONS: {
    readonly REQUEST_RETURN: "request_return";
    readonly COMPLETE_RETURN: "complete_return";
    readonly TRANSFER_BETWEEN_STORES: "transfer_between_stores";
};
export type ReturnAction = keyof typeof RETURN_ACTIONS;
export declare const INVENTORY_ACTIONS: {
    readonly ADJUST_STOCK: "adjust_stock";
    readonly COUNT_INVENTORY: "count_inventory";
    readonly DAMAGE_PRODUCT: "damage_product";
    readonly EXPIRE_PRODUCT: "expire_product";
    readonly RESERVE_STOCK: "reserve_stock";
    readonly UNRESERVE_STOCK: "unreserve_stock";
    readonly QUARANTINE_PRODUCT: "quarantine_product";
    readonly RELEASE_QUARANTINE: "release_quarantine";
};
export type InventoryAction = keyof typeof INVENTORY_ACTIONS;
export type BusinessAction = PurchaseAction | TransferAction | SalesAction | ReturnAction | InventoryAction;
export declare const ACTION_TO_TRANSACTION_TYPE: {
    readonly create_order: "ORDER_PURCHASE";
    readonly approve_order: "ORDER_PURCHASE";
    readonly register_invoice: "DOCUMENT_SUPPLIER_IN";
    readonly arrive_at_cd: "DOCUMENT_SUPPLIER_IN";
    readonly start_conference: "DOCUMENT_SUPPLIER_IN";
    readonly scan_items: "DOCUMENT_SUPPLIER_IN";
    readonly effectuate_cd: "DOCUMENT_SUPPLIER_IN";
    readonly create_transfer_request: "TRANSFER_OUT";
    readonly create_separation_map: "TRANSFER_OUT";
    readonly start_separation: "TRANSFER_OUT";
    readonly complete_separation: "TRANSFER_OUT";
    readonly complete_separation_ok: "TRANSFER_OUT";
    readonly complete_separation_diff: "TRANSFER_OUT";
    readonly move_to_dock: "TRANSFER_OUT";
    readonly ship_transfer: "TRANSFER_OUT";
    readonly invoice_transfer: "TRANSFER_OUT";
    readonly start_store_conference: "TRANSFER_IN";
    readonly scan_store_items: "TRANSFER_IN";
    readonly complete_store_conference_ok: "TRANSFER_IN";
    readonly complete_store_conference_diff: "TRANSFER_IN";
    readonly effectuate_store: "TRANSFER_IN";
    readonly register_sale: "DOCUMENT_SALE";
    readonly register_payment: "DOCUMENT_SALE";
    readonly register_fiscal_data: "DOCUMENT_SALE";
    readonly cancel_sale: "DOCUMENT_SALE";
    readonly request_return: "DOCUMENT_RETURN";
    readonly complete_return: "DOCUMENT_RETURN";
    readonly transfer_between_stores: "DOCUMENT_RETURN";
    readonly adjust_stock: "INVENTORY_MOVEMENT";
    readonly count_inventory: "INVENTORY_MOVEMENT";
    readonly damage_product: "INVENTORY_MOVEMENT";
    readonly expire_product: "INVENTORY_MOVEMENT";
    readonly reserve_stock: "INVENTORY_MOVEMENT";
    readonly unreserve_stock: "INVENTORY_MOVEMENT";
    readonly quarantine_product: "INVENTORY_MOVEMENT";
    readonly release_quarantine: "INVENTORY_MOVEMENT";
};
export declare const ACTION_TO_TARGET_STATE: {
    readonly create_order: "PENDENTE";
    readonly approve_order: "APPROVED";
    readonly register_invoice: "PRE_BAIXA";
    readonly arrive_at_cd: "AGUARDANDO_CONFERENCIA_CD";
    readonly start_conference: "EM_CONFERENCIA_CD";
    readonly scan_items: "CONFERENCIA_CD_SEM_DIVERGENCIA";
    readonly effectuate_cd: "EFETIVADO_CD";
    readonly create_transfer_request: "PEDIDO_TRANSFERENCIA_CRIADO";
    readonly create_separation_map: "MAPA_SEPARACAO_CRIADO";
    readonly start_separation: "EM_SEPARACAO_CD";
    readonly complete_separation: "SEPARACAO_CD_SEM_DIVERGENCIA";
    readonly complete_separation_ok: "SEPARACAO_CD_SEM_DIVERGENCIA";
    readonly complete_separation_diff: "SEPARACAO_CD_COM_DIVERGENCIA";
    readonly move_to_dock: "SEPARADO_PRE_DOCA";
    readonly ship_transfer: "EMBARCADO_CD";
    readonly invoice_transfer: "TRANSFERENCIA_CDH_FATURADA";
    readonly start_store_conference: "EM_CONFERENCIA_LOJA";
    readonly scan_store_items: "CONFERENCIA_LOJA_SEM_DIVERGENCIA";
    readonly complete_store_conference_ok: "CONFERENCIA_LOJA_SEM_DIVERGENCIA";
    readonly complete_store_conference_diff: "CONFERENCIA_LOJA_COM_DIVERGENCIA";
    readonly effectuate_store: "EFETIVADO_LOJA";
    readonly register_sale: "VENDA_CONCLUIDA";
    readonly register_payment: "VENDA_CONCLUIDA";
    readonly register_fiscal_data: "VENDA_CONCLUIDA";
    readonly cancel_sale: "VENDA_CANCELADA";
    readonly request_return: "DEVOLUCAO_AGUARDANDO";
    readonly complete_return: "DEVOLUCAO_CONCLUIDA";
    readonly transfer_between_stores: "TRANSFERENCIA_ENTRE_LOJAS";
    readonly adjust_stock: "MOVIMENTO_EXECUTADO";
    readonly count_inventory: "MOVIMENTO_EXECUTADO";
    readonly damage_product: "MOVIMENTO_EXECUTADO";
    readonly expire_product: "MOVIMENTO_EXECUTADO";
    readonly reserve_stock: "MOVIMENTO_EXECUTADO";
    readonly unreserve_stock: "MOVIMENTO_EXECUTADO";
    readonly quarantine_product: "MOVIMENTO_EXECUTADO";
    readonly release_quarantine: "MOVIMENTO_EXECUTADO";
};
//# sourceMappingURL=eca-actions.d.ts.map